{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { addItem, removeItem } from './item.actions';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nexport class ItemEffects {\n  constructor(actions$) {\n    this.actions$ = actions$;\n    this.addItem$ = createEffect(() => this.actions$.pipe(ofType(addItem), tap(({\n      item\n    }) => {\n      console.log(`Item added: ${item.name}`);\n    })), {\n      dispatch: false\n    });\n    this.removeItem$ = createEffect(() => this.actions$.pipe(ofType(removeItem), tap(({\n      id\n    }) => {\n      console.log(`Item removed: ${id}`);\n    })), {\n      dispatch: false\n    });\n    this.updateItem$ = createEffect();\n  }\n}\nItemEffects.ɵfac = function ItemEffects_Factory(t) {\n  return new (t || ItemEffects)(i0.ɵɵinject(i1.Actions));\n};\nItemEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemEffects,\n  factory: ItemEffects.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,OAAO,EAAEC,UAAU,QAAkB,gBAAgB;AAC9D,SAASC,GAAG,QAAQ,gBAAgB;;;AAGpC,OAAM,MAAOC,WAAW;EA6BtBC,YAAoBC,QAAiB;IAAjB,aAAQ,GAARA,QAAQ;IA5B5B,aAAQ,GAAGP,YAAY,CACrB,MACE,IAAI,CAACO,QAAQ,CAACC,IAAI,CAChBP,MAAM,CAACC,OAAO,CAAC,EACfE,GAAG,CAAC,CAAC;MAAEK;IAAI,CAAE,KAAI;MACfC,OAAO,CAACC,GAAG,CAAC,eAAeF,IAAI,CAACG,IAAI,EAAE,CAAC;IACzC,CAAC,CAAC,CACH,EACH;MAAEC,QAAQ,EAAE;IAAK,CAAE,CACpB;IAED,gBAAW,GAAGb,YAAY,CACxB,MACE,IAAI,CAACO,QAAQ,CAACC,IAAI,CAChBP,MAAM,CAACE,UAAU,CAAC,EAClBC,GAAG,CAAC,CAAC;MAAEU;IAAE,CAAE,KAAI;MACbJ,OAAO,CAACC,GAAG,CAAC,iBAAiBG,EAAE,EAAE,CAAC;IACpC,CAAC,CAAC,CACH,EACH;MAAED,QAAQ,EAAE;IAAK,CAAE,CACpB;IAGD,gBAAW,GAACb,YAAY,EAEjB;EAGiC;;;mBA7B7BK,WAAW;AAAA;;SAAXA,WAAW;EAAAU,SAAXV,WAAW;AAAA","names":["createEffect","ofType","addItem","removeItem","tap","ItemEffects","constructor","actions$","pipe","item","console","log","name","dispatch","id","factory"],"sourceRoot":"","sources":["C:\\Work\\Assignment\\ngx-Demo\\src\\app\\store\\item.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { addItem, removeItem,updateItem} from './item.actions';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ItemEffects {\r\n  addItem$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(addItem),\r\n        tap(({ item }) => {\r\n          console.log(`Item added: ${item.name}`);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  removeItem$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(removeItem),\r\n        tap(({ id }) => {\r\n          console.log(`Item removed: ${id}`);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n\r\n  updateItem$=createEffect(\r\n    \r\n        )\r\n\r\n\r\n  constructor(private actions$: Actions) {}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}